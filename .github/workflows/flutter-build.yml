name: Flutter CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            build
            .dart_tool
            android/.gradle
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Check Environment
        run: |
          echo "Flutter version:"
          flutter --version
          echo "Dart version:"
          dart --version
          echo "Java version:"
          java -version
          echo "Workspace directory:"
          pwd
          echo "Directory contents:"
          ls -la
          
      - name: Install dependencies
        run: flutter pub get
        
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        
      - name: Analyze project source
        run: flutter analyze --no-fatal-warnings  # 忽略警告，只有错误才会中断流程
        
    
        
      - name: Build APK
        run: flutter build apk --debug --target-platform android-arm64



      - name: Get version from pubspec
        id: version
        run: |
          VERSION=$(grep 'version:' pubspec.yaml | cut -d' ' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: List APK files
        run: ls -l build/app/outputs/flutter-apk/

      - name: Rename APK with version
        run: |
          cd build/app/outputs/flutter-apk/
          for file in *-debug.apk; do
            if [ -f "$file" ]; then
              arch=$(echo $file | sed 's/app-\(.*\)-debug.apk/\1/')
              mv "$file" "app-${{ steps.version.outputs.version }}-${arch}.apk"
            fi
          done

      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/app/outputs/flutter-apk/app-${{ steps.version.outputs.version }}-*.apk
          
      - name: Upload Artifact for Debug
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-*.apk
          retention-days: 7
